---
- name: "Creates work directory: '{{ work_dir }}'"
  file:
    path: '{{ work_dir }}'
    state: directory
    owner: root
    group: root
  become: yes
  become_user: root
  when: not skip_task

- name: "Copy mariadb repository setup script to '{{ work_dir }}'"
  ansible.builtin.copy:
    src: mariadb_repo_setup.sh
    dest: '{{ work_dir }}'
    owner: root
    group: root
    mode: u=rwx,g=r,o=r
  become: yes
  become_user: root
  when: not skip_task

- name: "Repeat repo setup script: '{{ reinstall_mariadb }}' "
  file:
    path: /etc/apt/sources.list.d/mariadb.list
    state: absent
  become: yes
  become_user: root
  when: reinstall_mariadb and not skip_task

- name: "Run mariadb repository setup script"
  ansible.builtin.shell: ./mariadb_repo_setup.sh --mariadb-server-version='{{ mariadb_version }}' #mariadb_repo_setup.sh --mariadb-server-version=10.3
  args:
    chdir: '{{ work_dir }}'
    creates: /etc/apt/sources.list.d/mariadb.list
  become: yes
  become_user: root
  when: not skip_task

- name: "Install software-properties-common"
  ansible.builtin.apt:
    pkg:
    - software-properties-common
    state: present
    update_cache: yes
  become: yes
  become_user: root
  when: not skip_task

- name: "Install mariadb packages"
  ansible.builtin.apt:
    pkg: '{{ mariadb_pkgs }}'
    state: present
  become: yes
  become_user: root
  when: not skip_task

- name: Make sure pymysql is present
  ansible.builtin.pip:
    name: pymysql
    state: present
  become: true
  when: not skip_task

- name: Start and enable Mariadb Service
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: yes
  when: not skip_task

...
